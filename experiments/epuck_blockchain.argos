<?xml version="1.0" ?>
<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
   
    <system threads="0" />

    <experiment length="0"
                ticks_per_second="10"
                random_seed="23" />

  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
<controllers>

    <epuck_environment_classification_controller id="blockchain"
     library="build/controllers/epuck_environment_classification/libepuck_environment_classification.so">
     
      <actuators>
	<epuck_wheels implementation="default" />
        <epuck_range_and_bearing implementation="medium" medium="rab" range="0.22" />
      </actuators>
      <sensors>
        <!--epuck_motor_ground implementation="rot_z_only" /-->
        <epuck_range_and_bearing implementation="medium" medium="rab" show_rays="true"/>
        <epuck_proximity implementation="default" show_rays="false" />
      </sensors>

      <params>

    	<simulation_parameters g="10" 
   			       sigma="10"
			       turn="45"
			       lamda="100"
			       exitFlag="true"
			       profiling="true"
			       decision_rule="3"
			       num_pack_saved="2"
			       percent_white="66"
			       base_dir="BASEDIR"
			       use_multiple_nodes="true"
			       use_background_geth_calls="true"
			       interface_path="interface.txt"
			       mapping_path="MAPPINGPATH"
			       base_port="331200"
			       blockchain_path="BLOCKCHAINPATH"
			       use_classical_approach="true"
			       regenerate_file="REGENERATEFILE"
			       percent_black="34"/> <!-- Sigma and G must be inserted in seconds, not in ticks; 
							  1 = Voter model; 2 = Direct comparison; 3 = Majority Rule-->

 
      </params>
    </epuck_environment_classification_controller>
  </controllers>
 
  <media>
    <range_and_bearing id="rab" />
  </media>

 
</argos-configuration>
